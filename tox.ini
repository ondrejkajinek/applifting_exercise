[tox]
envlist = py35, py36, py37, py38, pylint, flake, pydocstyle, coverage
skipsdist = true
skip_missing_interpreters = true

[testenv]
setenv =
	COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
deps =
	pytest
	pytest-django
	pytest-cov
	pyyaml
	-rrequirements.txt
usedevelop = true
commands = pytest --cov=api --cov-config="{toxinidir}/tox.ini"

[testenv:pylint]
deps = 
	pylint
	-rrequirements.txt
commands = pylint product_aggregator

[testenv:flake]
deps = flake8
commands = flake8 product_aggregator

[testenv:pydocstyle]
deps = pydocstyle
commands = pydocstyle

[testenv:coverage]
deps =
	coverage >= 5.0.1
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =
	coverage combine
	coverage report -m
	coverage xml -o {toxworkdir}/coverage.xml
	coverage html -d {toxworkdir}/htmlcov
depends = py35, py36, py37, py38
parallel_show_output = True

[pytest]
DJANGO_SETTINGS_MODULE = product_aggregator.settings

[flake8]
exclude = venv,.git,.tox,dist,*egg,*.egg-info,api/*/migrations/*.py,app/*/migrations/*.py

[pydocstyle]
match-dir=^(?!(venv|migrations|\.)).*

[coverage:run]
branch = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
	^\s*raise NotImplementedError\b
	^if __name__ == ['"]__main__['"]:$
